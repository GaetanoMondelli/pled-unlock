{
  "procedureTemplates": [
    {
      "templateId": "hiring_process",
      "name": "Software Engineer Hiring Process",
      "description": "Standard hiring workflow for software engineering positions",
      "variables": {
        "candidate": {
          "email": {
            "type": "string",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          }
        },
        "company": {
          "email": {
            "type": "string",
            "required": true
          },
          "department": {
            "type": "string",
            "required": true
          }
        }
      },
      "eventTypes": [
        {
          "type": "EMAIL_RECEIVED",
          "schema": {
            "from": "string",
            "to": "string",
            "subject": "string",
            "body": "string",
            "time": "string"
          }
        },
        {
          "type": "DOCUMENT_UPLOADED",
          "schema": {
            "filename": "string",
            "type": "string",
            "url": "string"
          }
        }
      ],
      "messageRules": [
        {
          "id": "interview_request_pattern",
          "priority": 1,
          "matches": {
            "type": "EMAIL_RECEIVED",
            "conditions": {
              "from": "{{candidate.email}}",
              "to": "{{company.email}}",
              "subject": "(contains) interview"
            }
          },
          "captures": {
            "requestTime": "{{event.data.time}}",
            "requestSubject": "{{event.data.subject}}"
          },
          "generates": {
            "type": "contact_candidate",
            "template": {
              "title": "interview requested by {{candidate.name}}",
              "content": "Candidate has requested an interview for {{company.department}} position",
              "timestamp": "{{captures.requestTime}}"
            }
          },
          "transition": {
            "to": "contacting_candidate",
            "conditions": {
              "requestTime": "(after) {{previousState.time}}"
            }
          }
        },
        {
          "id": "interview_request_llm",
          "priority": 2,
          "matches": {
            "type": "EMAIL_RECEIVED",
            "conditions": {
              "from": "{{candidate.email}}",
              "to": "{{company.email}}",
              "body": "(llm-prompt) {{candidate.name}} asks for an interview",
              "time": "{{event.data.time}}"
            }
          },
          "generates": {
            "type": "discuss_role",
            "template": {
              "title": "interview requested by {{candidate.name}}",
              "content": "Candidate has requested an interview for {{company.department}} position",
              "timestamp": "{{event.data.time}}"
            }
          }
        },
        {
          "id": "hr_approval_rule",
          "priority": 1,
          "matches": {
            "type": "HR_EVENT",
            "conditions": {
              "action": "approve_candidate",
              "decision": "approved"
            }
          },
          "generates": {
            "type": "prepare_contract",
            "template": {
              "title": "Prepare employment contract",
              "candidateId": "{{event.data.candidateId}}"
            }
          },
          "transition": "contract_prepared"
        },
        {
          "id": "contract_generated_rule",
          "priority": 2,
          "matches": {
            "type": "CONTRACT_EVENT",
            "conditions": {
              "status": "generated",
              "templateId": "(contains) EMP"
            }
          },
          "generates": {
            "type": "send_contract",
            "template": {
              "documentId": "{{event.data.documentId}}",
              "candidate": "{{event.data.metadata.candidateName}}"
            }
          },
          "transition": "contract_prepared"
        },
        {
          "id": "docusign_sent_rule",
          "priority": 3,
          "matches": {
            "type": "DOCUSIGN_EVENT",
            "conditions": {
              "envelopeStatus": "sent",
              "recipientStatus": [
                "sent"
              ]
            }
          },
          "generates": {
            "type": "contract_sent_notification",
            "template": {
              "envelopeId": "{{event.data.envelopeId}}",
              "recipient": "{{event.data.recipients[0].email}}"
            }
          },
          "transition": "contract_sent"
        },
        {
          "id": "role_discussion_rule",
          "priority": 2,
          "matches": {
            "type": "EMAIL_RECEIVED",
            "conditions": {
              "from": "{{candidate.email}}",
              "to": "{{company.email}}",
              "subject": "(contains) role"
            }
          },
          "generates": {
            "type": "discuss_role",
            "template": {
              "title": "Role discussion with {{candidate.name}}",
              "content": "Candidate wants to discuss role details"
            }
          },
          "transition": "role_discussed"
        },
        {
          "id": "schedule_interview_rule",
          "priority": 3,
          "matches": {
            "type": "CALENDAR_EVENT",
            "conditions": {
              "type": "schedule_interview",
              "candidateEmail": "{{candidate.email}}"
            }
          },
          "generates": {
            "type": "schedule_interview",
            "template": {
              "title": "Interview scheduled with {{candidate.name}}",
              "content": "Interview scheduled for {{event.data.proposedTime}}"
            }
          },
          "transition": "interview_scheduled"
        },
        {
          "id": "interview_conducted_rule",
          "priority": 4,
          "matches": {
            "type": "INTERVIEW_EVENT",
            "conditions": {
              "type": "interview_completed"
            }
          },
          "generates": {
            "type": "conduct_interview",
            "template": {
              "title": "Interview completed with {{candidate.name}}",
              "content": "Interview lasted {{event.data.duration}} minutes"
            }
          },
          "transition": "interview_conducted"
        },
        {
          "id": "positive_feedback_rule",
          "priority": 5,
          "matches": {
            "type": "FEEDBACK_EVENT",
            "conditions": {
              "type": "interview_feedback",
              "decision": "positive"
            }
          },
          "generates": {
            "type": "positive_feedback",
            "template": {
              "title": "Positive feedback for {{candidate.name}}",
              "content": "Interview feedback: {{event.data.notes}}"
            }
          },
          "transition": "offer_preparation"
        },
        {
          "id": "docusign_sent_pattern",
          "priority": 1,
          "matches": {
            "type": "DOCUSIGN_STATUS",
            "conditions": {
              "status": "sent"
            }
          },
          "captures": {
            "envelopeId": "{{event.data.envelopeId}}",
            "sentTime": "{{event.data.timestamp}}",
            "actionId": "{{event.data.actionId}}"
          },
          "generates": {
            "type": "send_contract",
            "template": {
              "title": "Contract sent via DocuSign",
              "content": "Employment contract has been sent via DocuSign (Envelope ID: {{captures.envelopeId}})",
              "timestamp": "{{captures.sentTime}}",
              "metadata": {
                "actionId": "{{captures.actionId}}",
                "envelopeId": "{{captures.envelopeId}}"
              }
            }
          },
          "transition": "contract_sent"
        },
        {
          "id": "docusign_signed_pattern",
          "priority": 1,
          "matches": {
            "type": "DOCUSIGN_STATUS",
            "conditions": {
              "status": "completed"
            }
          },
          "captures": {
            "envelopeId": "{{event.data.envelopeId}}",
            "sentTime": "{{event.data.timestamp}}",
            "actionId": "{{event.data.actionId}}"
          },
          "generates": {
            "type": "wait_for_signature",
            "template": {
              "title": "Contract signed",
              "content": "Contract has been signed by the candidate",
              "timestamp": "{{captures.sentTime}}",
              "metadata": {
                "actionId": "{{captures.actionId}}",
                "envelopeId": "{{captures.envelopeId}}"
              }
            }
          },
          "transition": "contract_signed"
        },
        {
          "id": "check_policy_pattern",
          "priority": 1,
          "matches": {
            "type": "DOCUSIGN_CLICK_USERS"
          },
          "captures": {
            "clickwrapId": "{{event.data.clickwrapId}}"
          },
          "generates": {
            "type": "check_lifecycle",
            "template": {
              "title": "Check lifecycle policy",
              "content": "Check policy on onboarding",
              "type": "check_lifecycle"
            }
          },
          "transition": "onboarding_started"
        }
      ],
      "stateMachine": {
        "fsl": "idle 'contact_candidate' -> contacting_candidate; contacting_candidate 'discuss_role' -> role_discussed; role_discussed 'schedule_interview' -> interview_scheduled; interview_scheduled 'conduct_interview' -> interview_conducted; interview_conducted 'positive_feedback' -> contract_prepared; interview_conducted 'negative_feedback' -> failure; contract_prepared 'send_contract' -> contract_sent; contract_sent 'wait_for_signature' -> contract_signed; contract_sent 'rejection' -> failure; contract_signed 'check_lifecycle' -> onboarding_started; onboarding_started 'complete_training' -> training_completed; training_completed 'probation_period' -> probation_review; probation_review 'positive_feedback' -> salary_review; probation_review 'negative_feedback' -> termination_initiated; salary_review 'positive_feedback' -> performance_review; salary_review 'negative_feedback' -> termination_initiated; performance_review 'positive_feedback' -> active_employee; performance_review 'negative_feedback' -> termination_initiated; active_employee 'request_to_leave' -> voluntary_exit; active_employee 'termination_decision' -> termination_initiated; termination_initiated 'finalize' -> terminated; voluntary_exit 'finalize' -> exited; failure 'retry' -> idle;"
      },
      "states": {
        "contract_prepared": {
          "description": "Employment contract has been prepared and is ready to be sent",
          "actions": [
            "docusign_send"
          ]
        },
        "contract_sent": {
          "description": "Employment contract has been sent to the candidate",
          "actions": [
            "send_reminder"
          ]
        },
        "contract_signed": {
          "description": "Employment contract has been signed by the candidate",
          "actions": [
            "create_calendar_event",
            "send_email"
          ]
        }
      },
      "documents": {
        "contracts": [
          {
            "id": "employment_contract",
            "name": "Employment Contract",
            "type": "contract",
            "content": "Standard employment contract template...",
            "linkedStates": [
              "contract_sent",
              "contract_signed"
            ]
          },
          {
            "id": "signed_employment_contract",
            "name": "Signed Employment Contract",
            "type": "contract",
            "content": "Signed version of the employment contract",
            "linkedStates": [
              "contract_signed"
            ]
          }
        ]
      },
      "actions": {
        "docusign_send": {
          "id": "docusign_send",
          "name": "Send via DocuSign",
          "type": "DOCUSIGN_SEND",
          "description": "Send contract through DocuSign for signature",
          "template": {
            "documentId": "employment_contract",
            "recipient": "{{candidate.email}}",
            "message": "Please review and sign your employment contract",
            "expiryDays": 7
          }
        },
        "docusign_click_send": {
          "id": "docusign_click_send",
          "name": "Send via DocuSign Click",
          "type": "DOCUSIGN_CLICK_SEND",
          "description": "Send policy through DocuSign Click for acceptance",
          "template": {
            "data": {
              "clickwrapName": "Employment Policy",
              "documents": [
                {
                  "documentName": "Employment Policy",
                  "documentId": "policy_document",
                  "order": 0
                }
              ]
            }
          }
        },
        "interview_requested": [
          {
            "type": "SEND_EMAIL",
            "template": {
              "id": "action_13123443555",
              "from": "{{company.email}}",
              "to": "{{candidate.email}}",
              "subject": "Interview Request Received for {{company.department}}",
              "body": "Dear {{candidate.name}},\n\nWe received your interview request for the position in {{company.department}}.\n\nBest regards,\nHR Team"
            }
          },
          {
            "type": "CREATE_CALENDAR_EVENT",
            "template": {
              "id": "action_14355233243",
              "title": "Interview with {{candidate.name}}",
              "description": "Interview for {{company.department}} position",
              "attendees": [
                "{{candidate.email}}",
                "{{company.email}}"
              ]
            }
          }
        ],
        "interview_scheduled": [
          {
            "id": "action_12343534534",
            "type": "SEND_REMINDER",
            "template": {
              "to": "{{candidate.email}}",
              "subject": "Interview Reminder",
              "body": "Dear {{candidate.name}},\n\nThis is a reminder about your upcoming interview..."
            },
            "executed": true,
            "executedAt": "2025-01-26T21:18:58.313Z",
            "trigger": "schedule_interview"
          }
        ],
        "contract_prepared": [
          {
            "id": "action_1737835293132",
            "type": "DOCUSIGN_SEND",
            "enabled": true,
            "template": {
              "source": "action",
              "data": {
                "type": "DOCUSIGN_SEND",
                "file": {
                  "name": "Freelance Contract_instance.pdf",
                  "content": ""
                },
                "recipients": [
                  "gaetano.mondelli@gmail.com"
                ],
                "tabPositions": [
                  {
                    "pageNumber": "1",
                    "xPosition": "300",
                    "yPosition": "800",
                    "name": "SignHere_1",
                    "tabLabel": "SignHere_1"
                  }
                ]
              }
            },
            "executed": true,
            "executedAt": "2025-01-26T21:19:09.001Z",
            "trigger": "positive_feedback"
          }
        ],
        "schedule_interview": [
          {
            "id": "action_1737921271615",
            "type": " Calendar",
            "enabled": true,
            "template": {
              "source": "action",
              "data": {
                "type": " Calendar",
                "googleAPI": "calendar",
                "sentCalendarInvite": true
              }
            }
          }
        ]
      }
    },
    {
      "templateId": "545a8c1a02b1",
      "name": "Example",
      "description": "This is an example template",
      "variables": {
        "candidate": {
          "email": {
            "type": "string",
            "required": true
          },
          "name": {
            "type": "string",
            "required": true
          }
        },
        "company": {
          "email": {
            "type": "string",
            "required": true
          },
          "department": {
            "type": "string",
            "required": true
          }
        }
      },
      "eventTypes": [
        {
          "type": "EMAIL_RECEIVED",
          "schema": {
            "from": "string",
            "to": "string",
            "subject": "string",
            "body": "string",
            "time": "string"
          }
        },
        {
          "type": "DOCUMENT_UPLOADED",
          "schema": {
            "filename": "string",
            "type": "string",
            "url": "string"
          }
        }
      ],
      "messageRules": [
        {
          "matches": {
            "type": "EMAIL_RECEIVED",
            "conditions": {
              "from": "{{candidate.email}}",
              "to": "{{company.email}}",
              "subject": "(contains) interview"
            }
          },
          "captures": {
            "requestTime": "{{event.data.time}}",
            "requestSubject": "{{event.data.subject}}"
          },
          "generates": {
            "type": "contact_candidate",
            "template": {
              "title": "interview requested by {{candidate.name}}",
              "content": "Candidate has requested an interview for {{company.department}} position",
              "timestamp": "{{captures.requestTime}}"
            }
          },
          "transition": {
            "to": "contacting_candidate",
            "conditions": {
              "requestTime": "(after) {{previousState.time}}"
            }
          }
        }
      ],
      "stateMachine": {
        "fsl": "idle 'start' -> review;\nreview 'approve' -> approved;\nreview 'reject' -> rejected;\napproved 'complete' -> completed;\nrejected 'retry' -> review;",
        "initial": "idle",
        "final": [
          "completed",
          "terminated",
          "failed"
        ]
      }
    },
    {
      "templateId": "1e4a3ffd1252",
      "name": "Freelance Software Development Service Contract",
      "description": "Workflow for a freelance software development contract from initial contact to final payment",
      "variables": {
        "group": {
          "field": {
            "type": "string",
            "required": true
          }
        }
      },
      "eventTypes": [
        {
          "type": "EMAIL_RECEIVED",
          "schema": {
            "from": "string",
            "to": "string",
            "subject": "string",
            "body": "string",
            "time": "string"
          }
        },
        {
          "type": "DOCUMENT_UPLOADED",
          "schema": {
            "filename": "string",
            "type": "string",
            "url": "string"
          }
        }
      ],
      "messageRules": [
        {
          "matches": {
            "type": "INITIAL_CONTACT",
            "conditions": {}
          },
          "generates": {
            "type": "initial contact",
            "template": {
              "title": "Initial Contact Made",
              "content": "A potential client has made the initial contact."
            }
          }
        },
        {
          "matches": {
            "type": "ACCEPT_TERMS",
            "conditions": {}
          },
          "generates": {
            "type": "accept terms",
            "template": {
              "title": "Terms Accepted",
              "content": "The client has accepted the terms."
            }
          }
        },
        {
          "matches": {
            "type": "CONTRACT_SIGNED",
            "conditions": {}
          },
          "generates": {
            "type": "contract signed",
            "template": {
              "title": "Contract Signed",
              "content": "The contract has been signed by the client."
            }
          }
        },
        {
          "matches": {
            "type": "PAYMENT_INITIATED",
            "conditions": {}
          },
          "generates": {
            "type": "payment initiated",
            "template": {
              "title": "Payment Initiated",
              "content": "The client has initiated the first payment."
            }
          }
        },
        {
          "matches": {
            "type": "WEEKLY_UPDATE",
            "conditions": {}
          },
          "generates": {
            "type": "weekly update",
            "template": {
              "title": "Weekly Update",
              "content": "A weekly update on the project progress."
            }
          }
        },
        {
          "matches": {
            "type": "PROJECT_COMPLETED",
            "conditions": {}
          },
          "generates": {
            "type": "project completed",
            "template": {
              "title": "Project Completed",
              "content": "The project has been completed."
            }
          }
        },
        {
          "matches": {
            "type": "FINAL_APPROVAL",
            "conditions": {}
          },
          "generates": {
            "type": "final approval",
            "template": {
              "title": "Final Approval",
              "content": "The project has received final approval."
            }
          }
        },
        {
          "matches": {
            "type": "PAYMENT_CONFIRMED",
            "conditions": {}
          },
          "generates": {
            "type": "payment confirmed",
            "template": {
              "title": "Payment Confirmed",
              "content": "The final payment has been confirmed."
            }
          }
        }
      ],
      "stateMachine": {
        "fsl": "idle 'initial contact' -> project_offered; project_offered 'accept terms' -> terms_accepted; terms_accepted 'contract signed' -> contract_signed; contract_signed 'payment initiated' -> first_payment_processed; first_payment_processed 'weekly update' -> project_in_progress; project_in_progress 'project completed' -> project_completed; project_completed 'final approval' -> final_payment_initiated; final_payment_initiated 'payment confirmed' -> completed;",
        "initial": "idle",
        "final": [
          "completed",
          "terminated",
          "failed"
        ]
      }
    },
    {
      "templateId": "carbon-credit-hydro",
      "name": "Carbon Credit Tokenization - Hydro Power", 
      "description": "Complete workflow for converting hydro power measurements into verified carbon credit certificates using IoT devices",
      "category": "carbon",
      "variables": {
        "project": {
          "projectId": { "type": "string", "required": true },
          "projectName": { "type": "string", "required": true },
          "geography": { "type": "string", "required": true },
          "technology": { "type": "string", "required": true },
          "vintage": { "type": "string", "required": true },
          "additionality": { "type": "string", "required": true }
        },
        "device": {
          "deviceId": { "type": "string", "required": true },
          "deviceType": { "type": "string", "required": true },
          "location": { "type": "string", "required": true },
          "certificateId": { "type": "string", "required": true }
        },
        "config": {
          "conversionRate": { "type": "number", "required": true },
          "batchSize": { "type": "number", "required": true },
          "tokenStandard": { "type": "string", "required": true },
          "certificateSize": { "type": "number", "required": true },
          "qualityThreshold": { "type": "number", "required": true }
        }
      },
      "eventTypes": [
        {
          "type": "IOT_MEASUREMENT",
          "schema": {
            "deviceId": "string",
            "timestamp": "string", 
            "value": "number",
            "unit": "string",
            "signature": "string",
            "metadata": "object"
          }
        },
        {
          "type": "TOKEN_CREATED",
          "schema": {
            "tokenId": "string",
            "credits": "number", 
            "metadata": "object",
            "qualityScore": "number"
          }
        },
        {
          "type": "CERTIFICATE_GENERATED",
          "schema": {
            "certificateId": "string",
            "tokenIds": "array",
            "totalCredits": "number",
            "issueDate": "string",
            "expiryDate": "string"
          }
        }
      ],
      "messageRules": [
        {
          "id": "iot_measurement_validation",
          "priority": 1,
          "matches": {
            "type": "IOT_MEASUREMENT",
            "conditions": {
              "deviceId": "{{device.deviceId}}",
              "signature": "(verified)",
              "value": "(positive)"
            }
          },
          "captures": {
            "measurementValue": "{{event.data.value}}",
            "measurementTime": "{{event.data.timestamp}}",
            "deviceLocation": "{{device.location}}"
          },
          "generates": {
            "type": "validated_measurement",
            "template": {
              "title": "New hydro measurement from {{device.deviceType}}",
              "content": "Received {{captures.measurementValue}} {{event.data.unit}} from device {{device.deviceId}} at {{device.location}}",
              "timestamp": "{{captures.measurementTime}}"
            }
          },
          "transition": {
            "to": "processing_measurement",
            "conditions": {
              "measurementTime": "(after) {{previousState.time}}"
            }
          }
        },
        {
          "id": "batch_accumulation_rule",
          "priority": 2,
          "matches": {
            "type": "IOT_MEASUREMENT",
            "conditions": {
              "deviceId": "{{device.deviceId}}", 
              "signature": "(verified)"
            }
          },
          "generates": {
            "type": "batch_progress",
            "template": {
              "title": "Batch accumulation progress",
              "content": "Collected measurement {{event.data.value}} for batch processing. Batch size: {{config.batchSize}}"
            }
          },
          "transition": {
            "to": "accumulating_measurements",
            "conditions": {
              "batchCount": "(less_than) {{config.batchSize}}"
            }
          }
        },
        {
          "id": "batch_ready_rule",
          "priority": 3,
          "matches": {
            "type": "IOT_MEASUREMENT",
            "conditions": {
              "batchCount": "{{config.batchSize}}"
            }
          },
          "generates": {
            "type": "batch_ready",
            "template": {
              "title": "Measurement batch ready for token creation",
              "content": "Collected {{config.batchSize}} measurements, ready to create carbon tokens"
            }
          },
          "transition": {
            "to": "creating_tokens",
            "conditions": {
              "batchCount": "(equals) {{config.batchSize}}"
            }
          }
        },
        {
          "id": "token_creation_rule",
          "priority": 4,
          "matches": {
            "type": "TOKEN_CREATED",
            "conditions": {
              "qualityScore": "(greater_than) {{config.qualityThreshold}}"
            }
          },
          "generates": {
            "type": "quality_token",
            "template": {
              "title": "High-quality carbon token created",
              "content": "Created token {{event.data.tokenId}} with {{event.data.credits}} credits (quality: {{event.data.qualityScore}}%)"
            }
          },
          "transition": {
            "to": "accumulating_tokens",
            "conditions": {
              "qualityScore": "(greater_than) {{config.qualityThreshold}}"
            }
          }
        },
        {
          "id": "certificate_completion_rule",
          "priority": 5,
          "matches": {
            "type": "CERTIFICATE_GENERATED",
            "conditions": {
              "totalCredits": "(greater_than) 0"
            }
          },
          "generates": {
            "type": "certificate_ready",
            "template": {
              "title": "Certificate {{event.data.certificateId}} ready",
              "content": "Generated certificate with {{event.data.totalCredits}} carbon credits for project {{project.projectName}}"
            }
          },
          "transition": {
            "to": "certificate_generated",
            "conditions": {
              "issueDate": "(valid_date)"
            }
          }
        }
      ],
      "stateMachine": {
        "fsl": "/* IoT Validator Component */ idle 'measurement_received' -> validating; validating 'signature_valid' -> measurement_validated; validating 'signature_invalid' -> validation_error; validation_error 'retry' -> idle; /* Measurement Queue Component */ measurement_validated 'batch_progress' -> accumulating_measurements; accumulating_measurements 'measurement_received' -> accumulating_measurements; accumulating_measurements 'batch_ready' -> batch_processed; /* Token Creator Component */ batch_processed 'token_creation_start' -> creating_tokens; creating_tokens 'tokens_created' -> tokens_ready; /* Quality Splitter Component */ tokens_ready 'quality_check' -> quality_evaluation; quality_evaluation 'high_quality' -> quality_approved; quality_evaluation 'low_quality' -> quality_review; quality_review 'manual_approval' -> quality_approved; quality_review 'rejected' -> idle; /* Token Accumulator Component */ quality_approved 'token_accumulate' -> accumulating_tokens; accumulating_tokens 'more_tokens' -> accumulating_tokens; accumulating_tokens 'threshold_reached' -> tokens_accumulated; /* Certificate Generator Component */ tokens_accumulated 'generate_certificate' -> generating_certificate; generating_certificate 'certificate_created' -> certificate_generated;",
        "initial": "idle",
        "components": {
          "iot_validator": {
            "states": ["idle", "validating", "measurement_validated", "validation_error"],
            "purpose": "Validates IoT measurements with cryptographic signatures"
          },
          "measurement_queue": {
            "states": ["measurement_validated", "accumulating_measurements", "batch_processed"],
            "purpose": "Accumulates measurements until batch threshold is reached"
          },
          "token_creator": {
            "states": ["batch_processed", "creating_tokens", "tokens_ready"],
            "purpose": "Converts measurement batches into carbon tokens"
          },
          "quality_splitter": {
            "states": ["tokens_ready", "quality_evaluation", "quality_approved", "quality_review"],
            "purpose": "Routes tokens based on quality threshold"
          },
          "token_accumulator": {
            "states": ["quality_approved", "accumulating_tokens", "tokens_accumulated"],
            "purpose": "Accumulates tokens until certificate threshold"
          },
          "certificate_generator": {
            "states": ["tokens_accumulated", "generating_certificate", "certificate_generated"],
            "purpose": "Generates carbon credit certificates from token pools"
          }
        }
      },
      "states": {
        "validating": {
          "description": "Validating IoT measurement signature and data integrity",
          "actions": ["validate_signature", "verify_device"]
        },
        "processing_measurement": {
          "description": "Processing validated measurement for batch accumulation", 
          "actions": ["log_measurement", "check_batch_size"]
        },
        "accumulating_measurements": {
          "description": "Accumulating measurements until batch size is reached",
          "actions": ["add_to_batch", "update_progress"]
        },
        "creating_tokens": {
          "description": "Converting measurement batch into carbon tokens",
          "actions": ["mint_tokens", "calculate_quality"]
        },
        "accumulating_tokens": {
          "description": "Accumulating tokens until certificate threshold is reached",
          "actions": ["add_to_token_pool", "check_certificate_threshold"]
        },
        "generating_certificate": {
          "description": "Generating carbon credit certificate from accumulated tokens",
          "actions": ["create_certificate", "update_registry", "notify_stakeholders"]
        },
        "certificate_generated": {
          "description": "Carbon credit certificate has been successfully generated",
          "actions": ["send_notification", "archive_data"]
        },
        "quality_review": {
          "description": "Manual review required for low-quality tokens",
          "actions": ["request_review", "await_approval"]
        },
        "workflow_error": {
          "description": "Error in the workflow that requires attention",
          "actions": ["log_error", "notify_admin"]
        }
      },
      "actions": {
        "validate_signature": {
          "id": "validate_signature",
          "name": "Validate IoT Signature",
          "type": "IOT_VALIDATION",
          "description": "Validate cryptographic signature from IoT device",
          "template": {
            "endpoint": "https://api.renewable-registry.org/validate",
            "deviceId": "{{device.deviceId}}",
            "signature": "{{event.data.signature}}",
            "publicKey": "{{device.publicKey}}"
          }
        },
        "mint_tokens": {
          "id": "mint_tokens", 
          "name": "Mint Carbon Tokens",
          "type": "TOKEN_MINT",
          "description": "Create carbon tokens from verified measurements",
          "template": {
            "standard": "{{config.tokenStandard}}",
            "conversionRate": "{{config.conversionRate}}",
            "measurements": "{{batch.measurements}}",
            "projectMetadata": "{{project}}"
          }
        },
        "create_certificate": {
          "id": "create_certificate",
          "name": "Create Certificate", 
          "type": "CERTIFICATE_GENERATION",
          "description": "Generate carbon credit certificate from token pool",
          "template": {
            "tokens": "{{tokenPool}}",
            "projectId": "{{project.projectId}}",
            "issuer": "Renewable Energy Registry",
            "standard": "{{config.tokenStandard}}"
          }
        }
      },
      "documents": {
        "certificates": [
          {
            "id": "carbon_credit_certificate",
            "name": "Carbon Credit Certificate",
            "type": "certificate",
            "content": "Verified Carbon Credit Certificate for {{project.projectName}}",
            "linkedStates": ["generating_certificate", "certificate_generated"]
          }
        ]
      }
    },
    {
      "templateId": "carbon-credit-solar",
      "name": "Carbon Credit Tokenization - Solar Power",
      "description": "Complete workflow for converting solar power measurements into verified carbon credit certificates using IoT devices with higher frequency data collection",
      "category": "carbon",
      "variables": {
        "project": {
          "projectId": { "type": "string", "required": true },
          "projectName": { "type": "string", "required": true },
          "geography": { "type": "string", "required": true },
          "technology": { "type": "string", "required": true, "defaultValue": "Solar PV" },
          "vintage": { "type": "string", "required": true },
          "additionality": { "type": "string", "required": true }
        },
        "device": {
          "deviceId": { "type": "string", "required": true },
          "deviceType": { "type": "string", "required": true, "defaultValue": "solar-meter" },
          "location": { "type": "string", "required": true },
          "certificateId": { "type": "string", "required": true }
        },
        "config": {
          "conversionRate": { "type": "number", "required": true, "defaultValue": 2000 },
          "batchSize": { "type": "number", "required": true, "defaultValue": 48 },
          "tokenStandard": { "type": "string", "required": true, "defaultValue": "GS" },
          "certificateSize": { "type": "number", "required": true, "defaultValue": 50 },
          "qualityThreshold": { "type": "number", "required": true, "defaultValue": 85 }
        }
      },
      "eventTypes": [
        {
          "type": "IOT_MEASUREMENT",
          "schema": {
            "deviceId": "string",
            "timestamp": "string", 
            "value": "number",
            "unit": "string",
            "signature": "string",
            "weather": "object",
            "irradiance": "number"
          }
        },
        {
          "type": "TOKEN_CREATED",
          "schema": {
            "tokenId": "string",
            "credits": "number", 
            "metadata": "object",
            "qualityScore": "number",
            "weatherAdjustment": "number"
          }
        },
        {
          "type": "CERTIFICATE_GENERATED",
          "schema": {
            "certificateId": "string",
            "tokenIds": "array",
            "totalCredits": "number",
            "issueDate": "string",
            "expiryDate": "string",
            "standard": "string"
          }
        }
      ],
      "messageRules": [
        {
          "id": "solar_measurement_validation",
          "priority": 1,
          "matches": {
            "type": "IOT_MEASUREMENT",
            "conditions": {
              "deviceId": "{{device.deviceId}}",
              "signature": "(verified)",
              "value": "(positive)",
              "irradiance": "(greater_than) 100"
            }
          },
          "generates": {
            "type": "validated_measurement",
            "template": {
              "title": "New solar measurement from {{device.deviceType}}",
              "content": "Received {{event.data.value}} {{event.data.unit}} with {{event.data.irradiance}}W/m² irradiance"
            }
          },
          "transition": {
            "to": "measurement_validated"
          }
        },
        {
          "id": "solar_batch_processing",
          "priority": 2,
          "matches": {
            "type": "IOT_MEASUREMENT",
            "conditions": {
              "batchCount": "{{config.batchSize}}"
            }
          },
          "generates": {
            "type": "batch_ready",
            "template": {
              "title": "Solar measurement batch ready",
              "content": "Collected {{config.batchSize}} measurements over {{calculatedDuration}} for tokenization"
            }
          },
          "transition": {
            "to": "batch_processed"
          }
        }
      ],
      "stateMachine": {
        "fsl": "/* Solar IoT Validator Component */ idle 'measurement_received' -> validating; validating 'signature_valid' -> irradiance_check; irradiance_check 'sufficient_light' -> measurement_validated; irradiance_check 'insufficient_light' -> measurement_discarded; measurement_discarded 'retry' -> idle; validating 'signature_invalid' -> validation_error; validation_error 'retry' -> idle; /* Solar Measurement Queue Component */ measurement_validated 'batch_progress' -> accumulating_measurements; accumulating_measurements 'measurement_received' -> accumulating_measurements; accumulating_measurements 'batch_ready' -> weather_adjustment; weather_adjustment 'adjustment_applied' -> batch_processed; /* Solar Token Creator Component */ batch_processed 'token_creation_start' -> creating_tokens; creating_tokens 'weather_factor_applied' -> tokens_ready; /* Quality Splitter Component */ tokens_ready 'quality_check' -> quality_evaluation; quality_evaluation 'high_quality' -> quality_approved; quality_evaluation 'low_quality' -> weather_review; weather_review 'weather_approved' -> quality_approved; weather_review 'weather_rejected' -> idle; /* Token Accumulator Component */ quality_approved 'token_accumulate' -> accumulating_tokens; accumulating_tokens 'more_tokens' -> accumulating_tokens; accumulating_tokens 'threshold_reached' -> tokens_accumulated; /* Certificate Generator Component */ tokens_accumulated 'generate_certificate' -> generating_certificate; generating_certificate 'certificate_created' -> certificate_generated;",
        "initial": "idle",
        "components": {
          "solar_iot_validator": {
            "states": ["idle", "validating", "irradiance_check", "measurement_validated", "measurement_discarded", "validation_error"],
            "purpose": "Validates solar IoT measurements with signature and irradiance checks"
          },
          "solar_measurement_queue": {
            "states": ["measurement_validated", "accumulating_measurements", "weather_adjustment", "batch_processed"],
            "purpose": "Accumulates solar measurements with weather adjustment factors"
          },
          "solar_token_creator": {
            "states": ["batch_processed", "creating_tokens", "tokens_ready"],
            "purpose": "Creates solar carbon tokens with weather compensation"
          },
          "solar_quality_splitter": {
            "states": ["tokens_ready", "quality_evaluation", "quality_approved", "weather_review"],
            "purpose": "Routes solar tokens based on quality and weather factors"
          },
          "token_accumulator": {
            "states": ["quality_approved", "accumulating_tokens", "tokens_accumulated"],
            "purpose": "Accumulates tokens until certificate threshold"
          },
          "certificate_generator": {
            "states": ["tokens_accumulated", "generating_certificate", "certificate_generated"],
            "purpose": "Generates Gold Standard compliant certificates"
          }
        }
      },
      "states": {
        "validating": {
          "description": "Validating solar IoT measurement signature and data integrity",
          "actions": ["validate_signature", "verify_solar_device"]
        },
        "irradiance_check": {
          "description": "Checking solar irradiance levels for measurement quality",
          "actions": ["check_irradiance_threshold", "validate_weather_data"]
        },
        "weather_adjustment": {
          "description": "Applying weather compensation factors to measurements",
          "actions": ["apply_weather_factor", "calculate_efficiency"]
        },
        "creating_tokens": {
          "description": "Converting solar measurement batch into carbon tokens with weather adjustment",
          "actions": ["mint_solar_tokens", "apply_solar_efficiency", "calculate_quality"]
        }
      },
      "actions": {
        "validate_signature": {
          "id": "validate_solar_signature",
          "name": "Validate Solar IoT Signature",
          "type": "IOT_VALIDATION",
          "description": "Validate cryptographic signature from solar IoT device",
          "template": {
            "endpoint": "https://api.solar-registry.org/validate",
            "deviceId": "{{device.deviceId}}",
            "signature": "{{event.data.signature}}"
          }
        },
        "check_irradiance_threshold": {
          "id": "check_irradiance",
          "name": "Check Solar Irradiance",
          "type": "THRESHOLD_CHECK",
          "description": "Verify minimum solar irradiance for valid measurement",
          "template": {
            "threshold": 100,
            "irradiance": "{{event.data.irradiance}}",
            "unit": "W/m²"
          }
        },
        "mint_solar_tokens": {
          "id": "mint_solar_tokens", 
          "name": "Mint Solar Carbon Tokens",
          "type": "TOKEN_MINT",
          "description": "Create solar carbon tokens with weather compensation",
          "template": {
            "standard": "GS",
            "conversionRate": "{{config.conversionRate}}",
            "weatherFactor": "{{calculated_weather_factor}}",
            "projectMetadata": "{{project}}"
          }
        }
      },
      "documents": {
        "certificates": [
          {
            "id": "solar_carbon_certificate",
            "name": "Solar Carbon Credit Certificate",
            "type": "certificate",
            "content": "Verified Solar Carbon Credit Certificate for {{project.projectName}} - Gold Standard Compliant",
            "linkedStates": ["generating_certificate", "certificate_generated"]
          }
        ]
      }
    }
  ],
  "eventTemplates": {
    "candidate_interview_request": {
      "id": "interview-request",
      "name": "Candidate Interview Request",
      "description": "Email from candidate requesting an interview",
      "type": "EMAIL_RECEIVED",
      "template": {
        "source": "gmail",
        "data": {
          "from": "john@example.com",
          "to": "hr@company.com",
          "subject": "Interview request",
          "body": "I would like to schedule an interview",
          "time": "2024-01-17T10:00:00Z"
        }
      },
      "received": true
    },
    "role_discussion": {
      "id": "role-discuss",
      "name": "Role Discussion",
      "description": "Discussion about role details",
      "type": "EMAIL_RECEIVED",
      "template": {
        "source": "gmail",
        "data": {
          "from": "john@example.com",
          "to": "hr@company.com",
          "subject": "Role discussion",
          "body": "I would like to discuss the role details",
          "time": "2024-01-17T11:00:00Z"
        }
      },
      "received": true
    },
    "interview_scheduling": {
      "id": "schedule-interview",
      "name": "Interview Scheduling",
      "description": "Schedule interview time",
      "type": "CALENDAR_EVENT",
      "template": {
        "source": "google-calendar",
        "data": {
          "type": "schedule_interview",
          "candidateEmail": "john@example.com",
          "interviewerEmail": "hr@company.com",
          "proposedTime": "2024-01-20T10:00:00Z",
          "duration": "60"
        }
      },
      "received": true
    },
    "interview_conducted": {
      "id": "interview-done",
      "name": "Interview Conducted",
      "description": "Interview completed",
      "type": "INTERVIEW_EVENT",
      "template": {
        "source": "interview-system",
        "data": {
          "type": "interview_completed",
          "candidateId": "CAND-123",
          "interviewerId": "INT-456",
          "duration": "55",
          "completedAt": "2024-01-20T11:00:00Z"
        }
      },
      "received": true
    },
    "interview_feedback": {
      "id": "feedback-positive",
      "name": "Positive Interview Feedback",
      "description": "Positive feedback from interview",
      "type": "FEEDBACK_EVENT",
      "template": {
        "source": "feedback-system",
        "data": {
          "type": "interview_feedback",
          "candidateId": "CAND-123",
          "decision": "positive",
          "rating": 4.5,
          "notes": "Strong technical skills and good culture fit",
          "recommendedAction": "proceed_to_offer"
        }
      },
      "received": true
    },
    "hr_approval": {
      "id": "hr-approval",
      "name": "HR Approval",
      "description": "HR approves candidate",
      "type": "HR_EVENT",
      "template": {
        "source": "hr-system",
        "data": {
          "action": "approve_candidate",
          "decision": "approved",
          "candidateId": "CAND-123",
          "approver": "hr@company.com"
        }
      },
      "received": false
    },
    "contract_generation": {
      "id": "contract-gen",
      "name": "Contract Generation",
      "description": "Contract generated",
      "type": "CONTRACT_EVENT",
      "template": {
        "source": "contract-service",
        "data": {
          "status": "generated",
          "templateId": "EMP-001",
          "documentId": "DOC-456",
          "metadata": {
            "candidateName": "John Doe",
            "position": "Software Engineer",
            "department": "Engineering"
          }
        }
      },
      "received": false
    },
    "email_received_1737822519240": {
      "id": "email_received_1737822519240",
      "name": "EMAIL_RECEIVED Event",
      "description": "EMAIL_RECEIVED event created manually",
      "type": "EMAIL_RECEIVED",
      "template": {
        "source": "manual",
        "data": {
          "from": "john@example123.com",
          "to": "hr@company.com",
          "subject": "Interview request",
          "body": "I would like to schedule an interview",
          "time": "2025-01-25T16:28:19.598Z"
        }
      },
      "received": false
    },
    "docusign_click_users_1737855939894": {
      "id": "docusign_click_users_1737855939894",
      "name": "DocuSign Click Users Consent",
      "description": "DocuSign clickwrap users consent check",
      "type": "DOCUSIGN_CLICK_USERS",
      "template": {
        "source": "manual",
        "data": {
          "hasAgreed": true,
          "agreements": [
            {
              "accountId": "a8c0cf58-75d0-422a-a7cd-1f7a88f15dd6",
              "clickwrapId": "ab259a48-23f0-4dc9-bd40-cdbd4b4b3f93",
              "clientUserId": "1737852110501",
              "agreementId": "f438c2a5-6a6d-4213-bf80-80f6ffbfd5d7",
              "consumerDisclosureEnabled": false,
              "createdOn": "2025-01-26T00:41:52.1858904Z",
              "agreedOn": "2025-01-26T00:42:05.4958401Z",
              "status": "agreed",
              "versionId": "4a6caf0d-260d-4c1f-81c9-02860bf757f4",
              "versionNumber": 1,
              "settings": {
                "displayName": "Policy",
                "hasDeclineButton": false,
                "actionButtonAlignment": "left",
                "mustRead": true,
                "mustView": false,
                "requireAccept": true,
                "downloadable": true,
                "sendToEmail": false,
                "consentButtonText": "I Agree",
                "allowClientOnly": true,
                "format": "modal",
                "documentDisplay": "document",
                "statementAlignment": "bottom"
              },
              "documentData": {},
              "version": "1.0"
            }
          ],
          "totalAgreements": 1,
          "page": 0,
          "pageSize": 40
        }
      },
      "received": false
    },
    "docusign_status_1737926838755": {
      "id": "docusign_status_1737926838755",
      "name": "DocuSign Status Event",
      "description": "DocuSign envelope status check",
      "type": "DOCUSIGN_STATUS",
      "template": {
        "source": "manual",
        "data": {
          "status": "completed",
          "documentsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/documents",
          "recipientsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/recipients",
          "attachmentsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/attachments",
          "envelopeUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f",
          "emailSubject": "Please sign this document",
          "emailBlurb": "Please review and sign this document at your earliest convenience.",
          "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
          "signingLocation": "online",
          "customFieldsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/custom_fields",
          "notificationUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/notification",
          "enableWetSign": "true",
          "allowMarkup": "false",
          "allowReassign": "true",
          "createdDateTime": "2025-01-26T21:19:03.9670000Z",
          "lastModifiedDateTime": "2025-01-26T21:19:03.9670000Z",
          "deliveredDateTime": "2025-01-26T21:23:59.8470000Z",
          "initialSentDateTime": "2025-01-26T21:19:05.6870000Z",
          "sentDateTime": "2025-01-26T21:19:05.6870000Z",
          "completedDateTime": "2025-01-26T21:25:27.1530000Z",
          "statusChangedDateTime": "2025-01-26T21:25:27.1530000Z",
          "documentsCombinedUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/documents/combined",
          "certificateUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/documents/certificate",
          "templatesUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/templates",
          "expireEnabled": "true",
          "expireDateTime": "2025-05-26T21:19:05.6870000Z",
          "expireAfter": "120",
          "sender": {
            "userName": "Gaetano Mondelli",
            "userId": "3d75ee95-c9b7-4531-80e7-31ad925c641c",
            "accountId": "a8c0cf58-75d0-422a-a7cd-1f7a88f15dd6",
            "email": "gaetano.mondelli@gmail.com",
            "ipAddress": "92.41.178.67"
          },
          "purgeState": "unpurged",
          "envelopeIdStamping": "true",
          "is21CFRPart11": "false",
          "signerCanSignOnMobile": "true",
          "autoNavigation": "true",
          "isSignatureProviderEnvelope": "false",
          "hasFormDataChanged": "false",
          "allowComments": "true",
          "hasComments": "false",
          "allowViewHistory": "true",
          "envelopeMetadata": {
            "allowAdvancedCorrect": "true",
            "enableSignWithNotary": "true",
            "allowCorrect": "true"
          },
          "anySigner": null,
          "envelopeLocation": "current_site",
          "isDynamicEnvelope": "false",
          "burnDefaultTabData": "false"
        }
      },
      "received": true
    }
  },
  "procedureInstances": [
    {
      "instanceId": "proc_123",
      "templateId": "hiring_process",
      "variables": {
        "candidate": {
          "email": "john@example.com",
          "name": "John Doe"
        },
        "company": {
          "email": "hr@company.com",
          "department": "Engineering"
        }
      },
      "currentState": {
        "name": "contract_prepared",
        "enteredAt": "2024-03-20T14:30:00Z"
      },
      "history": {
        "messages": [],
        "events": [
          {
            "id": "interview-request-1737640068838",
            "type": "EMAIL_RECEIVED",
            "timestamp": "2025-01-23T13:47:48.838Z",
            "data": {
              "from": "john@example.com",
              "to": "hr@company.com",
              "subject": "Interview request",
              "body": "I would like to schedule an interview",
              "time": "2024-01-17T10:00:00Z"
            },
            "transitions": [
              {
                "id": "interview-request-1737640068838",
                "timestamp": "2025-01-23T13:47:48.838Z",
                "message": "EMAIL_RECEIVED",
                "fromState": "idle",
                "toState": "processing"
              }
            ]
          },
          {
            "id": "role-discuss-1737641538864",
            "type": "EMAIL_RECEIVED",
            "timestamp": "2025-01-23T14:12:18.864Z",
            "data": {
              "from": "john@example.com",
              "to": "hr@company.com",
              "subject": "Role discussion",
              "body": "I would like to discuss the role details",
              "time": "2024-01-17T11:00:00Z"
            }
          },
          {
            "id": "schedule-interview-1737641550376",
            "type": "CALENDAR_EVENT",
            "timestamp": "2025-01-23T14:12:30.376Z",
            "data": {
              "type": "schedule_interview",
              "candidateEmail": "john@example.com",
              "interviewerEmail": "hr@company.com",
              "proposedTime": "2024-01-20T10:00:00Z",
              "duration": "60"
            }
          },
          {
            "id": "interview-done-1737925016283",
            "type": "INTERVIEW_EVENT",
            "timestamp": "2025-01-26T20:56:56.283Z",
            "data": {
              "type": "interview_completed",
              "candidateId": "CAND-123",
              "interviewerId": "INT-456",
              "duration": "55",
              "completedAt": "2024-01-20T11:00:00Z"
            }
          },
          {
            "id": "feedback-positive-1737925016284",
            "type": "FEEDBACK_EVENT",
            "timestamp": "2025-01-26T20:56:56.284Z",
            "data": {
              "type": "interview_feedback",
              "candidateId": "CAND-123",
              "decision": "positive",
              "rating": 4.5,
              "notes": "Strong technical skills and good culture fit",
              "recommendedAction": "proceed_to_offer"
            }
          },
          {
            "id": "evt_1737926346365",
            "name": "DocuSign Envelope Sent",
            "description": "Envelope 37ea58bf-81fb-47dd-96a9-f8b47182a43f has been sent to recipients",
            "type": "DOCUSIGN_SENT",
            "template": {
              "source": "action",
              "data": {
                "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
                "status": "sent",
                "timestamp": "2025-01-26T21:19:06.219Z",
                "actionId": "action_1737835293132"
              }
            },
            "data": {
              "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
              "status": "sent",
              "timestamp": "2025-01-26T21:19:06.219Z",
              "actionId": "action_1737835293132"
            },
            "timestamp": "2025-01-26T21:19:06.365Z",
            "history": {
              "events": [
                {
                  "id": "interview-request-1737640068838",
                  "type": "EMAIL_RECEIVED",
                  "timestamp": "2025-01-23T13:47:48.838Z",
                  "data": {
                    "from": "john@example.com",
                    "to": "hr@company.com",
                    "subject": "Interview request",
                    "body": "I would like to schedule an interview",
                    "time": "2024-01-17T10:00:00Z"
                  },
                  "transitions": [
                    {
                      "id": "interview-request-1737640068838",
                      "timestamp": "2025-01-23T13:47:48.838Z",
                      "message": "EMAIL_RECEIVED",
                      "fromState": "idle",
                      "toState": "processing"
                    }
                  ]
                },
                {
                  "id": "role-discuss-1737641538864",
                  "type": "EMAIL_RECEIVED",
                  "timestamp": "2025-01-23T14:12:18.864Z",
                  "data": {
                    "from": "john@example.com",
                    "to": "hr@company.com",
                    "subject": "Role discussion",
                    "body": "I would like to discuss the role details",
                    "time": "2024-01-17T11:00:00Z"
                  }
                },
                {
                  "id": "schedule-interview-1737641550376",
                  "type": "CALENDAR_EVENT",
                  "timestamp": "2025-01-23T14:12:30.376Z",
                  "data": {
                    "type": "schedule_interview",
                    "candidateEmail": "john@example.com",
                    "interviewerEmail": "hr@company.com",
                    "proposedTime": "2024-01-20T10:00:00Z",
                    "duration": "60"
                  }
                },
                {
                  "id": "interview-done-1737925016283",
                  "type": "INTERVIEW_EVENT",
                  "timestamp": "2025-01-26T20:56:56.283Z",
                  "data": {
                    "type": "interview_completed",
                    "candidateId": "CAND-123",
                    "interviewerId": "INT-456",
                    "duration": "55",
                    "completedAt": "2024-01-20T11:00:00Z"
                  }
                },
                {
                  "id": "feedback-positive-1737925016284",
                  "type": "FEEDBACK_EVENT",
                  "timestamp": "2025-01-26T20:56:56.284Z",
                  "data": {
                    "type": "interview_feedback",
                    "candidateId": "CAND-123",
                    "decision": "positive",
                    "rating": 4.5,
                    "notes": "Strong technical skills and good culture fit",
                    "recommendedAction": "proceed_to_offer"
                  }
                }
              ]
            }
          },
          {
            "id": "evt_1737926348106",
            "name": "DocuSign Status Update",
            "description": "Envelope 37ea58bf-81fb-47dd-96a9-f8b47182a43f status is now: sent",
            "type": "DOCUSIGN_STATUS",
            "template": {
              "source": "action",
              "data": {
                "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
                "status": "sent",
                "timestamp": "2025-01-26T21:19:07.923Z",
                "actionId": "action_1737835293132"
              }
            },
            "data": {
              "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
              "status": "sent",
              "timestamp": "2025-01-26T21:19:07.923Z",
              "actionId": "action_1737835293132"
            },
            "timestamp": "2025-01-26T21:19:08.106Z",
            "history": {
              "events": [
                {
                  "id": "interview-request-1737640068838",
                  "type": "EMAIL_RECEIVED",
                  "timestamp": "2025-01-23T13:47:48.838Z",
                  "data": {
                    "from": "john@example.com",
                    "to": "hr@company.com",
                    "subject": "Interview request",
                    "body": "I would like to schedule an interview",
                    "time": "2024-01-17T10:00:00Z"
                  },
                  "transitions": [
                    {
                      "id": "interview-request-1737640068838",
                      "timestamp": "2025-01-23T13:47:48.838Z",
                      "message": "EMAIL_RECEIVED",
                      "fromState": "idle",
                      "toState": "processing"
                    }
                  ]
                },
                {
                  "id": "role-discuss-1737641538864",
                  "type": "EMAIL_RECEIVED",
                  "timestamp": "2025-01-23T14:12:18.864Z",
                  "data": {
                    "from": "john@example.com",
                    "to": "hr@company.com",
                    "subject": "Role discussion",
                    "body": "I would like to discuss the role details",
                    "time": "2024-01-17T11:00:00Z"
                  }
                },
                {
                  "id": "schedule-interview-1737641550376",
                  "type": "CALENDAR_EVENT",
                  "timestamp": "2025-01-23T14:12:30.376Z",
                  "data": {
                    "type": "schedule_interview",
                    "candidateEmail": "john@example.com",
                    "interviewerEmail": "hr@company.com",
                    "proposedTime": "2024-01-20T10:00:00Z",
                    "duration": "60"
                  }
                },
                {
                  "id": "interview-done-1737925016283",
                  "type": "INTERVIEW_EVENT",
                  "timestamp": "2025-01-26T20:56:56.283Z",
                  "data": {
                    "type": "interview_completed",
                    "candidateId": "CAND-123",
                    "interviewerId": "INT-456",
                    "duration": "55",
                    "completedAt": "2024-01-20T11:00:00Z"
                  }
                },
                {
                  "id": "feedback-positive-1737925016284",
                  "type": "FEEDBACK_EVENT",
                  "timestamp": "2025-01-26T20:56:56.284Z",
                  "data": {
                    "type": "interview_feedback",
                    "candidateId": "CAND-123",
                    "decision": "positive",
                    "rating": 4.5,
                    "notes": "Strong technical skills and good culture fit",
                    "recommendedAction": "proceed_to_offer"
                  }
                },
                {
                  "id": "evt_1737926346365",
                  "name": "DocuSign Envelope Sent",
                  "description": "Envelope 37ea58bf-81fb-47dd-96a9-f8b47182a43f has been sent to recipients",
                  "type": "DOCUSIGN_SENT",
                  "template": {
                    "source": "action",
                    "data": {
                      "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
                      "status": "sent",
                      "timestamp": "2025-01-26T21:19:06.219Z",
                      "actionId": "action_1737835293132"
                    }
                  },
                  "data": {
                    "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
                    "status": "sent",
                    "timestamp": "2025-01-26T21:19:06.219Z",
                    "actionId": "action_1737835293132"
                  },
                  "timestamp": "2025-01-26T21:19:06.365Z",
                  "history": {
                    "events": [
                      {
                        "id": "interview-request-1737640068838",
                        "type": "EMAIL_RECEIVED",
                        "timestamp": "2025-01-23T13:47:48.838Z",
                        "data": {
                          "from": "john@example.com",
                          "to": "hr@company.com",
                          "subject": "Interview request",
                          "body": "I would like to schedule an interview",
                          "time": "2024-01-17T10:00:00Z"
                        },
                        "transitions": [
                          {
                            "id": "interview-request-1737640068838",
                            "timestamp": "2025-01-23T13:47:48.838Z",
                            "message": "EMAIL_RECEIVED",
                            "fromState": "idle",
                            "toState": "processing"
                          }
                        ]
                      },
                      {
                        "id": "role-discuss-1737641538864",
                        "type": "EMAIL_RECEIVED",
                        "timestamp": "2025-01-23T14:12:18.864Z",
                        "data": {
                          "from": "john@example.com",
                          "to": "hr@company.com",
                          "subject": "Role discussion",
                          "body": "I would like to discuss the role details",
                          "time": "2024-01-17T11:00:00Z"
                        }
                      },
                      {
                        "id": "schedule-interview-1737641550376",
                        "type": "CALENDAR_EVENT",
                        "timestamp": "2025-01-23T14:12:30.376Z",
                        "data": {
                          "type": "schedule_interview",
                          "candidateEmail": "john@example.com",
                          "interviewerEmail": "hr@company.com",
                          "proposedTime": "2024-01-20T10:00:00Z",
                          "duration": "60"
                        }
                      },
                      {
                        "id": "interview-done-1737925016283",
                        "type": "INTERVIEW_EVENT",
                        "timestamp": "2025-01-26T20:56:56.283Z",
                        "data": {
                          "type": "interview_completed",
                          "candidateId": "CAND-123",
                          "interviewerId": "INT-456",
                          "duration": "55",
                          "completedAt": "2024-01-20T11:00:00Z"
                        }
                      },
                      {
                        "id": "feedback-positive-1737925016284",
                        "type": "FEEDBACK_EVENT",
                        "timestamp": "2025-01-26T20:56:56.284Z",
                        "data": {
                          "type": "interview_feedback",
                          "candidateId": "CAND-123",
                          "decision": "positive",
                          "rating": 4.5,
                          "notes": "Strong technical skills and good culture fit",
                          "recommendedAction": "proceed_to_offer"
                        }
                      }
                    ]
                  }
                }
              ]
            }
          },
          {
            "id": "docusign_status_1737926838755-1737926846973",
            "type": "DOCUSIGN_STATUS",
            "timestamp": "2025-01-26T21:27:26.973Z",
            "data": {
              "status": "completed",
              "documentsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/documents",
              "recipientsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/recipients",
              "attachmentsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/attachments",
              "envelopeUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f",
              "emailSubject": "Please sign this document",
              "emailBlurb": "Please review and sign this document at your earliest convenience.",
              "envelopeId": "37ea58bf-81fb-47dd-96a9-f8b47182a43f",
              "signingLocation": "online",
              "customFieldsUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/custom_fields",
              "notificationUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/notification",
              "enableWetSign": "true",
              "allowMarkup": "false",
              "allowReassign": "true",
              "createdDateTime": "2025-01-26T21:19:03.9670000Z",
              "lastModifiedDateTime": "2025-01-26T21:19:03.9670000Z",
              "deliveredDateTime": "2025-01-26T21:23:59.8470000Z",
              "initialSentDateTime": "2025-01-26T21:19:05.6870000Z",
              "sentDateTime": "2025-01-26T21:19:05.6870000Z",
              "completedDateTime": "2025-01-26T21:25:27.1530000Z",
              "statusChangedDateTime": "2025-01-26T21:25:27.1530000Z",
              "documentsCombinedUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/documents/combined",
              "certificateUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/documents/certificate",
              "templatesUri": "/envelopes/37ea58bf-81fb-47dd-96a9-f8b47182a43f/templates",
              "expireEnabled": "true",
              "expireDateTime": "2025-05-26T21:19:05.6870000Z",
              "expireAfter": "120",
              "sender": {
                "userName": "Gaetano Mondelli",
                "userId": "3d75ee95-c9b7-4531-80e7-31ad925c641c",
                "accountId": "a8c0cf58-75d0-422a-a7cd-1f7a88f15dd6",
                "email": "gaetano.mondelli@gmail.com",
                "ipAddress": "92.41.178.67"
              },
              "purgeState": "unpurged",
              "envelopeIdStamping": "true",
              "is21CFRPart11": "false",
              "signerCanSignOnMobile": "true",
              "autoNavigation": "true",
              "isSignatureProviderEnvelope": "false",
              "hasFormDataChanged": "false",
              "allowComments": "true",
              "hasComments": "false",
              "allowViewHistory": "true",
              "envelopeMetadata": {
                "allowAdvancedCorrect": "true",
                "enableSignWithNotary": "true",
                "allowCorrect": "true"
              },
              "anySigner": null,
              "envelopeLocation": "current_site",
              "isDynamicEnvelope": "false",
              "burnDefaultTabData": "false"
            }
          }
        ],
        "executedActions": [
          {
            "actionId": "action_1737835293132",
            "state": "contract_prepared",
            "type": "DOCUSIGN_SEND",
            "trigger": "positive_feedback",
            "timestamp": "2025-01-26T21:19:08.106Z"
          }
        ]
      },
      "startDate": "2024-03-20T10:00:00Z",
      "events": [
        {
          "id": "email_received_1737658866856",
          "name": "EMAIL_RECEIVED Event",
          "description": "EMAIL_RECEIVED event created manually",
          "type": "EMAIL_RECEIVED",
          "template": {
            "source": "manual",
            "data": {
              "from": "john@example.com",
              "to": "hr@company.com",
              "subject": "Interview request",
              "body": "I would like to schedule an interview",
              "time": "2025-01-23T18:54:48.250Z"
            }
          },
          "timestamp": "2025-01-23T19:01:07.909Z"
        },
        {
          "id": "email_received_1737658877484",
          "name": "EMAIL_RECEIVED Event",
          "description": "EMAIL_RECEIVED event created manually",
          "type": "EMAIL_RECEIVED",
          "template": {
            "source": "manual",
            "data": {
              "from": "john@example.com",
              "to": "hr@company.com",
              "subject": "Interview request",
              "body": "I would like to schedule an interview",
              "time": "2025-01-23T19:01:10.445Z"
            }
          },
          "timestamp": "2025-01-23T19:01:17.613Z"
        },
        {
          "id": "email_received_1737658978174",
          "name": "EMAIL_RECEIVED Event",
          "description": "EMAIL_RECEIVED event created manually",
          "type": "EMAIL_RECEIVED",
          "template": {
            "source": "manual",
            "data": {
              "from": "john@exssample.com",
              "to": "hr@company.com",
              "subject": "Interview request",
              "body": "I would like to schedule an interview",
              "time": "2025-01-23T19:02:49.855Z"
            }
          },
          "timestamp": "2025-01-23T19:02:58.883Z"
        }
      ]
    },
    {
      "instanceId": "proc_1737237009601",
      "templateId": "hiring_process",
      "variables": {
        "candidate": {
          "email": "steve@gmail.com",
          "name": "Steve McDonald"
        },
        "company": {
          "email": "hr@pled.com",
          "department": "Accounting"
        }
      },
      "currentState": {
        "name": "idle",
        "enteredAt": "2025-01-18T21:50:09.601Z"
      },
      "history": {
        "events": [],
        "messages": [],
        "completedActions": []
      },
      "startDate": "2025-01-18T21:50:09.601Z"
    },
    {
      "instanceId": "proc_1737331761417",
      "templateId": "hiring_process",
      "variables": {
        "candidate": {
          "email": "arthur@gmail.com",
          "name": "Arthur"
        },
        "company": {
          "email": "hr@company.com",
          "department": "Engineering"
        }
      },
      "currentState": {
        "name": "idle",
        "enteredAt": "2025-01-20T00:09:21.417Z"
      },
      "history": {
        "events": [],
        "messages": [],
        "completedActions": []
      },
      "startDate": "2025-01-20T00:09:21.417Z"
    },
    {
      "instanceId": "proc_1737406945013",
      "templateId": "1e4a3ffd1252",
      "variables": {
        "group": {
          "field": "Engineering"
        }
      },
      "currentState": {
        "name": "idle",
        "enteredAt": "2025-01-20T21:02:25.013Z"
      },
      "history": {
        "events": [],
        "messages": [],
        "completedActions": []
      },
      "startDate": "2025-01-20T21:02:25.013Z"
    }
  ],
  "events": {
    "email_received_1737658028281": {
      "id": "email_received_1737658028281",
      "name": "EMAIL_RECEIVED Event",
      "description": "EMAIL_RECEIVED event created manually",
      "type": "EMAIL_RECEIVED",
      "template": {
        "source": "manual",
        "data": {
          "from": "john@example.com",
          "to": "hr@company.com",
          "subject": "Interview request",
          "body": "I would like to schedule an interview",
          "time": "2025-01-23T18:46:58.783Z"
        }
      },
      "received": false
    },
    "email_received_1737658035104": {
      "id": "email_received_1737658035104",
      "name": "EMAIL_RECEIVED Event",
      "description": "EMAIL_RECEIVED event created manually",
      "type": "EMAIL_RECEIVED",
      "template": {
        "source": "manual",
        "data": {
          "from": "john@example.com",
          "to": "hr@company.com",
          "subject": "Interview request",
          "body": "I would like to schedule an interview",
          "time": "2025-01-23T18:46:58.783Z"
        }
      },
      "received": false
    }
  },
  "users": {
    "gmondelli": {
      "firstName": "Gaetano",
      "lastName": "Mondelli",
      "updatedAt": "2025-08-30T19:38:06.305Z",
      "walletAddress": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266"
    }
  }
}